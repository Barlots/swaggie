  /**<% parameters.forEach(function(parameter) { %>
   * @param <%- parameter.name -%> <%- parameter.optional ? '(optional)' : '' -%> <%- parameter.name != parameter.originalName ? `(API name: ${parameter.originalName})` : '' -%>
<% }); %>
   * @return Success
   */
  <%- name -%>(<% parameters.forEach(function(parameter) { -%>
  <%- parameter.name -%>: <%- parameter.type -%> <%- parameter.optional ? ' | null | undefined' : '' -%>,
    <% }); -%>
  ): AxiosPromise<<%- returnType -%>> {
    let url = this.baseUrl + '<%- url -%>';

<%_ if(pathParams && pathParams.length > 0) {
  pathParams.forEach(function(parameter) { -%>
    url = url.replace('{<%- parameter.name -%>}', encodeURIComponent("" + <%- parameter.name -%>));
<% });
} _%>

    return axios.request<<%- returnType -%>>({
      url: url,
      method: '<%- method -%>',
<%_ if(body) { _%>
      data: <%- body.name -%>,
<%_ } _%>
<%_ if(query && query.length > 0) { _%>
      params: {
        <% query.forEach(function(parameter) { -%>
    '<%- parameter.originalName -%>': <%- parameter.name -%>,
    <% }); -%>
      },
<%_ } _%>
<%_ if(headers && headers.length > 0) { _%>
      headers: {
        <% headers.forEach(function(parameter) { -%>
    <%_ if (parameter.value) { _%>
    '<%- parameter.originalName -%>': '<%- parameter.value -%>',
    <%_ } else { _%>
    '<%- parameter.originalName -%>': <%- parameter.name -%>,
    <%_ } _%>
    <% }); -%>
      },
<%_ } _%>
    });
  }
